===============
General inputs:
===============
  basis             str : [Required] String containing basis set name, e.g. sto-3g
  charge            int : [Required] Nuclear charge
  spin              int : [Required] Molecular Sz value

===============
Wavefunction:
===============
  method                str : [Required] Type of wavefunction model [casscf|csf|esmf]
  noci                 bool : [Optional] Determine if a NOCI calculation will be performed. Default = False
  overlap_matrix       bool : [Optional] Determine if a overlap matrix will be computed. Default = False
  dist_thresh         float : [Optional] Threshold overlap for considering two solution to be distrinct. Default = 1e-8
  oscillator_strength  bool : [Optional] Compute oscillator strengths from a given reference state. Default = False

CASSCF inputs:
--------------
  active_space  int int : [Required] Number of active orbitals and number of active electrons
 
CSF inputs:
--------------
  active_space              int int : [Required] Number of active orbitals and number of active electrons
  core_orbitals         int int ... : [Required] List of core orbital indices
  active_orbitals       int int ... : [Required] List of active orbital indices
  genealogical_coupling       str   : [Required] Denotes the spin-coupling pattern, e.g. ++--
  coupling_permutation  int int ... : [Required] List of indices for ordering orbitals involved in the spin coupling
  mo_basis                      str : [Optional] Type of orbital guess to use. Default = site
  total_spin                  float : [Required] Total spin value for CSF
  csf_build                     str : [Optional] Method for building CSF. Default = genealogical
  local_spins           float float : [Optional] Used when csf_build = clebschgordon. Total spin value of local bases
  active_subspaces      int int ... : [Optional] Used when csf_build = clebschgordon. [o_1, e_1, o_2, e_2]
                                      where o_i = Num. active orbitals on site i and e_i = Num. active electrons on site i.  

Oscillator strengths inputs:
-----------------------------
  oscillator_reference    int : [Optional] Index for the initial state, 1-indexed. Default = 1.
 
ESMF input:
--------------
  with_ref  bool : [Optional] If False, the closed-shell reference is excluded from wavefunction. Default = True

Optimisation:
--------------
  algorithm     str : [Optional] Determines which optimisation algorithm to use [eigenvector_following|mode_control] 
                                 Default = eigenvector_following
  convergence float : [Optional] Convergence threshold for optimisation. Default = 1e-8
  maxit         int : [Optional] Maximum number of allowed iterations. Default = 500
  index         int : [Optional] Target Hessian index. Default = None
  minstep     float : [Optional] Minimum allowed step size. Default = 0
  maxstep     float : [Optional] Maximum allowed step size. Defail = pi
  rtrust      float : [Optional] Starting trust radius. Default = 0.15
  hesstol     float : [Optional] Tolerance for throwing away zero Hesian eigenvalue. Default = 1e-16


==============
Initial guess: 
==============
  guess         str : [Optional] Select how to choose initial guess [random|ci_guess|fromfile]. Default = random
                                  > random   : Use random initial orbital and CI coefficients
                                  > ci_guess : Start from CIS or CASCI solution (not valid for CSF wavefunction)
                                  > fromfile : Read solutions from disk 
                                  > evlin    : Perform search along smallest Hessian eigenvalue

Random search:
--------------
  nsample       int : [Optional] Number of random samples to use. Default = 10
  seed          int : [Optional] Seed for random number generator. Default = 7

CI guess:
---------------
  ci_guess  int int... : [Required] List of indices for the CI states to use as an initial guess

Read from file:
---------------
  read_dir  str str... : [Required] List of directories to search for solutions

Eigenvector search:
-------------------
  read_dir                str str... : [Required] List of directories to search for solutions
  eigen_index                    int : [Optional] Index of Hessian eigendirection to search along. +ve values correspond
                                       to eigenvalues > 0, and -ve values correspond to -ve eigenvalues, ordered from 0 outwards. Default = +1.
  linesearch_grid  float, float, int : [Optional] Rotation values for defining the linesearch grid [ThMin, ThMax, Ngrid]. Default = -pi, pi, 51
  linesearch_nopt                int : [Optional] Number of stationary points to test along the linesearch. Default = 5

==============
Analysis:
==============
  analyse              bool  : [Optional] Determine if solution analysis will be performed. Default = False
  states             str str : [Optional] Tag name for solutions to be analysed. Default = all
  orbital_plots      int int : [Required] Range of orbital cube files to be generated (1-indexed).
